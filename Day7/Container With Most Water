class Solution {
    public int maxArea(int[] height) {
        int maxArea = 0;
        int left = 0;
        int right = height.length - 1;

        while (left < right) {
            maxArea = Math.max(maxArea, (right - left) * Math.min(height[left], height[right]));

            if (height[left] < height[right]) {
                left++;
            } else {
                right--;
            }
        }

        return maxArea;        
    }
}
// Time Complexity: O(n)
// The left and right pointers traverse the array once, each moving inward based on height comparison.

// Space Complexity: O(1)
// No extra space is used beyond a few variables (left, right, maxArea).
