class Solution {
    public int findJudge(int n, int[][] trust) {
        int[] indegree=new int[n+1];
        int[] outdegree=new int[n+1]; 
        for(int[]arr:trust){
            indegree[arr[1]]++;
            outdegree[arr[0]]++;
        }
        for(int i=1;i<=n;i++){
            if(outdegree[i]==0 && indegree[i]==n-1){
                return i;
            }
        }return -1;
    }
}
//Time Complexity: O(T + N)
// T = number of trust relationships (length of trust array)
//  N = number of people in the town
//  We iterate over trust once (O(T)) and then over all people once (O(N))

// Space Complexity: O(N)
//  We use two arrays of size N+1: indegree[] and outdegree[]
//  No additional space proportional to input size beyond these arrays
