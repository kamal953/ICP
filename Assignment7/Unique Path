
public int uniquePaths(int m, int n) {
    int[][] dp = new int[m][n];
    for (int i = 0; i < m; i++) dp[i][0] = 1;
    for (int j = 0; j < n; j++) dp[0][j] = 1;

    for (int i = 1; i < m; i++) {
        for (int j = 1; j < n; j++) {
            dp[i][j] = dp[i - 1][j] + dp[i][j - 1];
        }
    }
    return dp[m - 1][n - 1];
}
// Time Complexity: O(m * n)
// Each cell in the m x n grid is computed once using values from its top and left neighbors.

// Space Complexity: O(m * n)
// A 2D dp array of size m x n is used to store intermediate results.
