class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int m = mat.length, n = mat[0].length;
        Map<Integer, List<Integer>> map = new HashMap<>();

        
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int key = i + j;
                map.computeIfAbsent(key, k -> new ArrayList<>()).add(mat[i][j]);
            }
        }

        
        int[] result = new int[m * n];
        int idx = 0;

        for (int k = 0; k <= m + n - 2; k++) {
            List<Integer> diagonal = map.get(k);
            if (k % 2 == 0) {
                
                for (int i = diagonal.size() - 1; i >= 0; i--) {
                    result[idx++] = diagonal.get(i);
                }
            } else {
               
                for (int val : diagonal) {
                    result[idx++] = val;
                }
            }
        }

        return result;
    }
}
